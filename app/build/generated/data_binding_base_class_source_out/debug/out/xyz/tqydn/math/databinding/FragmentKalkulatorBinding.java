// Generated by view binder compiler. Do not edit!
package xyz.tqydn.math.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.GridLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.Guideline;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import xyz.tqydn.math.R;

public final class FragmentKalkulatorBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button button0;

  @NonNull
  public final Button button1;

  @NonNull
  public final Button button2;

  @NonNull
  public final Button button3;

  @NonNull
  public final Button button4;

  @NonNull
  public final Button button5;

  @NonNull
  public final Button button6;

  @NonNull
  public final Button button7;

  @NonNull
  public final Button button8;

  @NonNull
  public final Button button9;

  @NonNull
  public final Button buttonAddition;

  @NonNull
  public final Button buttonBackspace;

  @NonNull
  public final Button buttonC;

  @NonNull
  public final Button buttonCe;

  @NonNull
  public final Button buttonComma;

  @NonNull
  public final Button buttonDivision;

  @NonNull
  public final Button buttonEqual;

  @NonNull
  public final Button buttonFraction;

  @NonNull
  public final Button buttonMultiplication;

  @NonNull
  public final Button buttonPercentage;

  @NonNull
  public final Button buttonPlusMinus;

  @NonNull
  public final Button buttonRoot;

  @NonNull
  public final Button buttonSquare;

  @NonNull
  public final Button buttonSubtraction;

  @NonNull
  public final GridLayout gridLayout2;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final AppCompatTextView numberCurrent;

  @NonNull
  public final AppCompatTextView numberHistory;

  @NonNull
  public final TextView tv;

  private FragmentKalkulatorBinding(@NonNull CoordinatorLayout rootView, @NonNull Button button0,
      @NonNull Button button1, @NonNull Button button2, @NonNull Button button3,
      @NonNull Button button4, @NonNull Button button5, @NonNull Button button6,
      @NonNull Button button7, @NonNull Button button8, @NonNull Button button9,
      @NonNull Button buttonAddition, @NonNull Button buttonBackspace, @NonNull Button buttonC,
      @NonNull Button buttonCe, @NonNull Button buttonComma, @NonNull Button buttonDivision,
      @NonNull Button buttonEqual, @NonNull Button buttonFraction,
      @NonNull Button buttonMultiplication, @NonNull Button buttonPercentage,
      @NonNull Button buttonPlusMinus, @NonNull Button buttonRoot, @NonNull Button buttonSquare,
      @NonNull Button buttonSubtraction, @NonNull GridLayout gridLayout2,
      @NonNull Guideline guideline2, @NonNull AppCompatTextView numberCurrent,
      @NonNull AppCompatTextView numberHistory, @NonNull TextView tv) {
    this.rootView = rootView;
    this.button0 = button0;
    this.button1 = button1;
    this.button2 = button2;
    this.button3 = button3;
    this.button4 = button4;
    this.button5 = button5;
    this.button6 = button6;
    this.button7 = button7;
    this.button8 = button8;
    this.button9 = button9;
    this.buttonAddition = buttonAddition;
    this.buttonBackspace = buttonBackspace;
    this.buttonC = buttonC;
    this.buttonCe = buttonCe;
    this.buttonComma = buttonComma;
    this.buttonDivision = buttonDivision;
    this.buttonEqual = buttonEqual;
    this.buttonFraction = buttonFraction;
    this.buttonMultiplication = buttonMultiplication;
    this.buttonPercentage = buttonPercentage;
    this.buttonPlusMinus = buttonPlusMinus;
    this.buttonRoot = buttonRoot;
    this.buttonSquare = buttonSquare;
    this.buttonSubtraction = buttonSubtraction;
    this.gridLayout2 = gridLayout2;
    this.guideline2 = guideline2;
    this.numberCurrent = numberCurrent;
    this.numberHistory = numberHistory;
    this.tv = tv;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentKalkulatorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentKalkulatorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_kalkulator, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentKalkulatorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_0;
      Button button0 = rootView.findViewById(id);
      if (button0 == null) {
        break missingId;
      }

      id = R.id.button_1;
      Button button1 = rootView.findViewById(id);
      if (button1 == null) {
        break missingId;
      }

      id = R.id.button_2;
      Button button2 = rootView.findViewById(id);
      if (button2 == null) {
        break missingId;
      }

      id = R.id.button_3;
      Button button3 = rootView.findViewById(id);
      if (button3 == null) {
        break missingId;
      }

      id = R.id.button_4;
      Button button4 = rootView.findViewById(id);
      if (button4 == null) {
        break missingId;
      }

      id = R.id.button_5;
      Button button5 = rootView.findViewById(id);
      if (button5 == null) {
        break missingId;
      }

      id = R.id.button_6;
      Button button6 = rootView.findViewById(id);
      if (button6 == null) {
        break missingId;
      }

      id = R.id.button_7;
      Button button7 = rootView.findViewById(id);
      if (button7 == null) {
        break missingId;
      }

      id = R.id.button_8;
      Button button8 = rootView.findViewById(id);
      if (button8 == null) {
        break missingId;
      }

      id = R.id.button_9;
      Button button9 = rootView.findViewById(id);
      if (button9 == null) {
        break missingId;
      }

      id = R.id.button_addition;
      Button buttonAddition = rootView.findViewById(id);
      if (buttonAddition == null) {
        break missingId;
      }

      id = R.id.button_backspace;
      Button buttonBackspace = rootView.findViewById(id);
      if (buttonBackspace == null) {
        break missingId;
      }

      id = R.id.button_c;
      Button buttonC = rootView.findViewById(id);
      if (buttonC == null) {
        break missingId;
      }

      id = R.id.button_ce;
      Button buttonCe = rootView.findViewById(id);
      if (buttonCe == null) {
        break missingId;
      }

      id = R.id.button_comma;
      Button buttonComma = rootView.findViewById(id);
      if (buttonComma == null) {
        break missingId;
      }

      id = R.id.button_division;
      Button buttonDivision = rootView.findViewById(id);
      if (buttonDivision == null) {
        break missingId;
      }

      id = R.id.button_equal;
      Button buttonEqual = rootView.findViewById(id);
      if (buttonEqual == null) {
        break missingId;
      }

      id = R.id.button_fraction;
      Button buttonFraction = rootView.findViewById(id);
      if (buttonFraction == null) {
        break missingId;
      }

      id = R.id.button_multiplication;
      Button buttonMultiplication = rootView.findViewById(id);
      if (buttonMultiplication == null) {
        break missingId;
      }

      id = R.id.button_percentage;
      Button buttonPercentage = rootView.findViewById(id);
      if (buttonPercentage == null) {
        break missingId;
      }

      id = R.id.button_plus_minus;
      Button buttonPlusMinus = rootView.findViewById(id);
      if (buttonPlusMinus == null) {
        break missingId;
      }

      id = R.id.button_root;
      Button buttonRoot = rootView.findViewById(id);
      if (buttonRoot == null) {
        break missingId;
      }

      id = R.id.button_square;
      Button buttonSquare = rootView.findViewById(id);
      if (buttonSquare == null) {
        break missingId;
      }

      id = R.id.button_subtraction;
      Button buttonSubtraction = rootView.findViewById(id);
      if (buttonSubtraction == null) {
        break missingId;
      }

      id = R.id.gridLayout2;
      GridLayout gridLayout2 = rootView.findViewById(id);
      if (gridLayout2 == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = rootView.findViewById(id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.number_current;
      AppCompatTextView numberCurrent = rootView.findViewById(id);
      if (numberCurrent == null) {
        break missingId;
      }

      id = R.id.number_history;
      AppCompatTextView numberHistory = rootView.findViewById(id);
      if (numberHistory == null) {
        break missingId;
      }

      id = R.id.tv;
      TextView tv = rootView.findViewById(id);
      if (tv == null) {
        break missingId;
      }

      return new FragmentKalkulatorBinding((CoordinatorLayout) rootView, button0, button1, button2,
          button3, button4, button5, button6, button7, button8, button9, buttonAddition,
          buttonBackspace, buttonC, buttonCe, buttonComma, buttonDivision, buttonEqual,
          buttonFraction, buttonMultiplication, buttonPercentage, buttonPlusMinus, buttonRoot,
          buttonSquare, buttonSubtraction, gridLayout2, guideline2, numberCurrent, numberHistory,
          tv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
